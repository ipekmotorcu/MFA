-- Create table for ADMIN
CREATE TABLE ADMIN (
    AdminID INTEGER PRIMARY KEY,
    AdminName VARCHAR(255) NOT NULL,
    AdminPassword VARCHAR(255) NOT NULL
);

-- Create table for USER
CREATE TABLE USER (
    UserID INTEGER PRIMARY KEY,
    Username VARCHAR(255) NOT NULL,
    Password VARCHAR(255) NOT NULL,
    DateOfBirth DATE,
    Age INTEGER,
    UserType ENUM('Listener', 'Artist') NOT NULL,
    IsBanned BOOLEAN DEFAULT FALSE
);

-- Create table for LISTENER
CREATE TABLE LISTENER (
    ListenerID INTEGER PRIMARY KEY,
    UserID INTEGER NOT NULL,
    TopPlayTime INTEGER,
    FOREIGN KEY (UserID) REFERENCES USER(UserID)
);

-- Create table for LITTLE_LISTENER
CREATE TABLE LITTLE_LISTENER (
    ListenerID INTEGER PRIMARY KEY,
    ParentID INTEGER NOT NULL,
    FOREIGN KEY (ListenerID) REFERENCES LISTENER(ListenerID)
);

-- Create table for ARTIST
CREATE TABLE ARTIST (
    ArtistID INTEGER PRIMARY KEY,
    UserID INTEGER NOT NULL,
    Name VARCHAR(255) NOT NULL,
    Genre VARCHAR(255),
    FollowerCount INTEGER DEFAULT 0,
    FOREIGN KEY (UserID) REFERENCES USER(UserID)
);

-- Create table for FOLLOWERS
CREATE TABLE FOLLOWERS (
    FollowerID INTEGER PRIMARY KEY,
    UserID INTEGER NOT NULL,
    ArtistID INTEGER NOT NULL,
    FOREIGN KEY (UserID) REFERENCES USER(UserID),
    FOREIGN KEY (ArtistID) REFERENCES ARTIST(ArtistID)
);

-- Create table for ALBUM
CREATE TABLE ALBUM (
    AlbumID INTEGER PRIMARY KEY,
    ArtistID INTEGER NOT NULL,
    AlbumName VARCHAR(255) NOT NULL,
    ReleaseDate DATE,
    TracksCount INTEGER DEFAULT 0,
    FOREIGN KEY (ArtistID) REFERENCES ARTIST(ArtistID)
);

-- Create table for CATEGORY
CREATE TABLE CATEGORY (
    CategoryID INTEGER PRIMARY KEY,
    CategoryName VARCHAR(255) NOT NULL
);
-- Create table for MUSIC
CREATE TABLE MUSIC (
    MusicID INTEGER PRIMARY KEY,
    Name VARCHAR(255) NOT NULL,
    AlbumID INTEGER,
    CategoryID INTEGER NOT NULL,
    Explicit BOOLEAN DEFAULT FALSE,
    PlayCount INTEGER DEFAULT 0,
    ReleaseDate DATE,
    FOREIGN KEY (AlbumID) REFERENCES ALBUM(AlbumID),
    FOREIGN KEY (CategoryID) REFERENCES CATEGORY(CategoryID)
);

-- Create table for REACTIONS
CREATE TABLE REACTIONS (
    ReactionID INTEGER PRIMARY KEY,
    UserID INTEGER NOT NULL,
    MusicID INTEGER NOT NULL,
    ReactionType VARCHAR(255) NOT NULL,
    FOREIGN KEY (UserID) REFERENCES USER(UserID),
    FOREIGN KEY (MusicID) REFERENCES MUSIC(MusicID)
);

-- Create table for PLAYLIST
CREATE TABLE PLAYLIST (
    PlaylistID INTEGER PRIMARY KEY,
    ListenerID INTEGER NOT NULL,
    PlaylistName VARCHAR(255),
    CreationDate DATE,
    IsPublic BOOLEAN DEFAULT TRUE,
    FOREIGN KEY (ListenerID) REFERENCES LISTENER(ListenerID)
);

-- Create table for PLAYLIST_MUSIC
CREATE TABLE PLAYLIST_MUSIC (
    PlaylistID INTEGER NOT NULL,
    MusicID INTEGER NOT NULL,
    DateAdded DATE,
    PRIMARY KEY (PlaylistID, MusicID),
    FOREIGN KEY (PlaylistID) REFERENCES PLAYLIST(PlaylistID),
    FOREIGN KEY (MusicID) REFERENCES MUSIC(MusicID)
);

